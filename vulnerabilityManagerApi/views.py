from .models import Assets, Vulnerability
from .serializer import AssetsSerializer, VulnerabilitySerializer
from rest_framework import viewsets
from rest_framework.decorators import action
from rest_framework.response import Response


class AssetsViewset(viewsets.ModelViewSet):
    queryset = Assets.objects.all()
    serializer_class = AssetsSerializer


class VulnerabilityViewset(viewsets.ModelViewSet):
    queryset = Vulnerability.objects.all()
    serializer_class = VulnerabilitySerializer

    @action(detail=False)
    def critico(self, request):
        queryset = Vulnerability.objects.all().filter(severity='Cr√≠tico')
        serializer = VulnerabilitySerializer(
            queryset, many=True, context={'request': request}
            )
        return Response(serializer.data)

    @action(detail=False)
    def aprovado(self, request):
        queryset = Vulnerability.objects.all().filter(severity='Aprovado')
        serializer = VulnerabilitySerializer(
            queryset, many=True, context={'request': request}
            )
        return Response(serializer.data)

    @action(detail=False)
    def done(self, request):
        queryset = Vulnerability.objects.all().filter(done=True)
        serializer = VulnerabilitySerializer(
            queryset, many=True, context={'request': request}
            )
        return Response(serializer.data)
